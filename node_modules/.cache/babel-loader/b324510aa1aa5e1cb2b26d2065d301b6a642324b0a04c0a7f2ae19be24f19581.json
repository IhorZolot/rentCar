{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport storage from 'redux-persist/lib/storage';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport { favoriteReducer } from './favoriteSlice';\nimport { carsRaducer } from './carSlice';\nimport { filterReducer } from './filterSlice';\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, favoriteReducer);\nexport const store = configureStore({\n  reducer: {\n    carsList: carsRaducer,\n    favoriteList: persistedReducer,\n    filter: filterReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport let persistor = persistStore(store);","map":{"version":3,"names":["configureStore","storage","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","favoriteReducer","carsRaducer","filterReducer","persistConfig","key","version","persistedReducer","store","reducer","carsList","favoriteList","filter","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["/Users/igorzolotoverkh/Documents/GitHub/rentcar/src/redux/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\nimport storage from 'redux-persist/lib/storage'\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist'\nimport { favoriteReducer } from './favoriteSlice'\nimport { carsRaducer } from './carSlice'\nimport { filterReducer } from './filterSlice'\n\nconst persistConfig = {\n\tkey: 'root',\n\tversion: 1,\n\tstorage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, favoriteReducer)\nexport const store = configureStore({\n\treducer: { carsList: carsRaducer, favoriteList: persistedReducer, filter: filterReducer },\n\tmiddleware: getDefaultMiddleware =>\n\t\tgetDefaultMiddleware({\n\t\t\tserializableCheck: {\n\t\t\t\tignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n\t\t\t},\n\t\t}),\n})\n\nexport let persistor = persistStore(store)\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,YAAY,EAAEC,cAAc,EAAEC,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,eAAe;AAC/G,SAASC,eAAe,QAAQ,iBAAiB;AACjD,SAASC,WAAW,QAAQ,YAAY;AACxC,SAASC,aAAa,QAAQ,eAAe;AAE7C,MAAMC,aAAa,GAAG;EACrBC,GAAG,EAAE,MAAM;EACXC,OAAO,EAAE,CAAC;EACVd;AACD,CAAC;AAED,MAAMe,gBAAgB,GAAGb,cAAc,CAACU,aAAa,EAAEH,eAAe,CAAC;AACvE,OAAO,MAAMO,KAAK,GAAGjB,cAAc,CAAC;EACnCkB,OAAO,EAAE;IAAEC,QAAQ,EAAER,WAAW;IAAES,YAAY,EAAEJ,gBAAgB;IAAEK,MAAM,EAAET;EAAc,CAAC;EACzFU,UAAU,EAAEC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACpBC,iBAAiB,EAAE;MAClBC,cAAc,EAAE,CAACrB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACnE;EACD,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,IAAIiB,SAAS,GAAGxB,YAAY,CAACe,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}